$wrap: 800px;

.feature {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 40px;
  margin: 40px 0;
}

.feature-image {
  flex-shrink: 0;
  width: 40%;
  aspect-ratio: 3 / 2;
  border-radius: var(--rounded);
  overflow: hidden;
  box-shadow: var(--shadow);
}

.feature-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.feature-text {
  flex-grow: 1;
}

.feature-title {
  font-size: var(--large);
  text-align: center;
  font-family: var(--heading);
  font-weight: var(--semi-bold);
}

.feature[data-flip] {
  flex-direction: row-reverse;
}

@media (max-width: $wrap) {
  .feature {
    flex-direction: column !important;
  }

  .feature-image {
    width: 100%;
    max-width: calc($wrap / 2);
  }
}

// Styles for the new highlight card layout
.feature-highlight-card {
  display: block;
  position: relative;
  width: 340px; // Adjust width as needed, or see responsive notes below
  aspect-ratio: 4 / 3.2; // Adjust for desired card proportions
  border-radius: var(--rounded);
  overflow: hidden; // Crucial for containing the zoomed image
  box-shadow: var(--shadow);
  margin: 20px auto; // Centers card if it's standalone. Remove or set to 0 if using a flex/grid container like .highlights-container.
  text-decoration: none;
  color: #ffffff; // Default text color for content inside link on overlay

  &:hover {
    .feature-highlight-image {
      transform: scale(1.05); // Slight zoom effect
    }
    // Optional: slightly change overlay on hover if desired
    // .feature-highlight-content-overlay {
    //   background: linear-gradient(to top, rgba(0,0,0,0.9) 0%, rgba(0,0,0,0.5) 40%, rgba(0,0,0,0.1) 100%);
    // }
  }
}

.feature-highlight-image-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1; // Image is behind the overlay
}

.feature-highlight-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s ease-in-out;
}

.feature-highlight-content-overlay {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%; 
  z-index: 2; // Overlay is on top of the image
  display: flex;
  flex-direction: column;
  justify-content: flex-end; // Aligns content (title, text block) to the bottom
  align-items: flex-start;   // Aligns content to the left
  padding: 20px; // Adjust padding as needed
  background: linear-gradient(to top, rgba(0,0,0,0.85) 0%, rgba(0,0,0,0.5) 35%, rgba(0,0,0,0) 70%); // Adjusted gradient
  text-align: left; // Ensures text within child elements aligns left
  box-sizing: border-box;
  transition: background 0.3s ease-in-out;
}

.feature-highlight-title {
  font-size: var(--xl); 
  font-weight: var(--bold);
  margin-bottom: 8px;
  color: #ffffff;
  width: 100%; // Ensures title takes full width for text-align
}

.feature-highlight-text {
  font-size: 0.9rem;
  color: #f0f0f0;
  width: 100%;

  p {
    margin-bottom: 12px;
    line-height: 1.5;
    text-align: left; // Explicitly align paragraph text to left
  }

  // Styling for the button included in the 'text' variable
  // This targets the <a> tag with class 'button' inside the button-wrapper
  .button-wrapper a.button {
    margin-top: 10px; // Applied to wrapper, but button itself might need margin if wrapper is display:contents
    background: transparent;
    color: #ffffff;
    border: 1px solid #ffffff;
    padding: 6px 12px;
    font-size: 0.85rem;
    font-weight: var(--semi-bold);
    text-decoration: none;

    &:hover {
      background: rgba(255, 255, 255, 0.15);
      color: #ffffff;
      border-color: #ffffff;
    }

    // If the button has an icon
    .icon {
      margin-right: 5px;
    }
  }
}

// Optional: For a responsive grid of highlight cards (like sea.com)
// Wrap your {% include feature.html %} calls in index.md with <div class="highlights-container"> ... </div>

.highlights-container {
  display: flex;
  flex-wrap: wrap;
  justify-content: center; // Or space-around, space-between
  gap: 20px; // Adjust gap between cards
  padding: 20px; // Optional padding for the container
}

.feature-highlight-card {
  // ... other .feature-highlight-card styles like position, aspect-ratio, border-radius, overflow ...
  // Replace fixed width and margin:
  // width: 340px; 
  // margin: 20px auto;
  
  flex: 1 1 300px; // Example: cards will grow/shrink with a base width of 300px
  min-width: 280px; // Prevent cards from becoming too narrow
  max-width: 360px; // Optional: max-width for cards on larger screens
  margin: 0; // Margin is handled by the container's gap
}